#textdomain wesnoth-loti

#define ITEM_COUNT_OBJECTIVE NUMBER SCENARIO
    [event]
        name=prestart
        {VARIABLE items_dropped 0}
        [if]
            [variable]
                name={SCENARIO}
                equals=1
            [/variable]
            [else]
                [event]
                    name=item picked
                    first_time_only=no
                    {VARIABLE_OP items_taken add 1}
                    {VARIABLE items_to_take {NUMBER}}
                    {VARIABLE_OP items_to_take add $items_dropped}
                    [if]
                        [variable]
                            name=items_taken
                            greater_than_equal_to=$items_to_take
                        [/variable]
                        [then]
                            [fire_event]
                                name=finish collecting
                            [/fire_event]
                        [/then]
                        [else]
                            [print]
                                text= _ "Items to take: $($items_to_take-$items_taken*1)"
                                duration=5000
                                red,green,blue=255,255,255
                            [/print]
                        [/else]
                    [/if]
                [/event]
            [/else]
        [/if]
    [/event]
    [event]
        name=finish collecting
        [message]
            speaker=Lethalia
            message=_"This should be enough."
        [/message]
        {VARIABLE {SCENARIO} 1}
    [/event]
#enddef

#define CHAPTER5_ITEM VAR X Y
    [if]
        [variable]
            name={VAR}
            equals=done
        [/variable]
        [else]
            [set_variable]
                name=item_unknown_x
                value={X}
            [/set_variable]
            [set_variable]
                name=item_unknown_y
                value={Y}
            [/set_variable]
            [if]
                [variable]
                    name={VAR}
                    greater_than=0
                [/variable]
                [else]
                    [random_item]
                        group=expanded_drop
                        variable=item_type
                    [/random_item]
                    {VARIABLE {VAR} $item_type}
                [/else]
                [then]
                    {VARIABLE item_type ${VAR}}
                [/then]
            [/if]
            [set_variables]
                name=items
                mode=append
                [value]
                    x=$item_unknown_x
                    y=$item_unknown_y
                    type=${VAR}
                [/value]
            [/set_variables]
            {PLACE_ITEM_EVENT {X} {Y}}
            {DRAW_ITEM}
            [event]
                name=item picked
                [filter]
                    x,y={X},{Y}
                [/filter]
                {VARIABLE {VAR} done}
            [/event]
        [/else]
    [/if]
#enddef

#define RANDOM_ARMOURY_ITEM X Y
    [set_variable]
        name=item_unknown_x
        value={X}
    [/set_variable]
    [set_variable]
        name=item_unknown_y
        value={Y}
    [/set_variable]
    {VARIABLE_OP item_type rand (40,41,36,28,31,42,43,46,60,65,82,89,96,98,107,109,113,114,115,116,127,130,140,159,160,170,174)}		# The items waiting on the ground are mostly crap
    [set_variables]
        name=items
        mode=append
        [value]
            x={X}
            y={Y}
            type=$item_type
        [/value]
    [/set_variables]
    {PLACE_ITEM_EVENT {X} {Y}}
    {DRAW_ITEM}
#enddef

#define SHOW_MAP
    [event]
        name=prestart
        [set_menu_item]
            id=5map
            description=_"Show Map"
            [command]
                [message]
                    speaker=narrator
                    image="maps/antediluvian_tunnels_map.jpg"
                    message=""
                    [option]
                        label="                                                          "+_"Enlarge map"
                        [command]
                            [message]
                                speaker=narrator
                                image="maps/antediluvian_tunnels_map.jpg~SCALE(1740,1068)"
                                message=""
                            [/message]
                        [/command]
                    [/option]
                    [option]
                        label="                                                          "+_"Close"
                        default=yes
                    [/option]
                [/message]
            [/command]
        [/set_menu_item]
    [/event]
#enddef

#define SPAWN_POINT SIDE PERIOD X Y
    [event]
        name=prestart
        {PLACE_IMAGE scenery/trapdoor-closed.png {X} {Y}}
    [/event]
    [event]
        name=side turn
        first_time_only=no
        id=spawn_point_{X}_{Y}
        [if]
            [variable]
                name=side_number
                equals=1
            [/variable]
            [then]
                {VARIABLE do_spawn $turn_number}
                {VARIABLE_OP do_spawn modulo {PERIOD}}
                [if]
                    [variable]
                        name=do_spawn
                        equals=1
                    [/variable]
                    [then]
                        [switch]
                            variable=enemy_weakened
                            [case]
                                value=0
                                {VARIABLE_OP spawn_type rand (Spearman_steel,Spearman_steel,Lieutenant_steel,Javelineer_steel,Swordsman_steel,Dark Adept_steel,Dark Adept_steel,Dark Sorcerer_steel,Fencer_steel,Fencer_steel,Duelist_steel,Bowman_steel,Bowman_steel,Longbowman_steel)}
                                {VARIABLE did_spawn 1}
                            [/case]
                            [case]
                                value=1
                                {VARIABLE_OP spawn_type rand (Spearman_steel,Spearman_steel,Lieutenant_steel,Javelineer_steel,Swordsman_steel,Dark Adept_steel,Dark Adept_steel,Dark Sorcerer_steel,Fencer_steel,Fencer_steel,Duelist_steel,Bowman_steel,Bowman_steel,Longbowman_steel)}
                                {VARIABLE_OP did_spawn rand (1,1,1,1,1,1,1,1,1,0)}
                            [/case]
                            [case]
                                value=2
                                {VARIABLE_OP spawn_type rand (Spearman_steel,Spearman_steel,Spearman_steel,Lieutenant_steel,Javelineer_steel,Swordsman_steel,Dark Adept_steel,Dark Adept_steel,Dark Adept_steel,Dark Sorcerer_steel,Fencer_steel,Fencer_steel,Fencer_steel,Duelist_steel,Bowman_steel,Bowman_steel,Bowman_steel,Longbowman_steel)}
                                {VARIABLE_OP did_spawn rand (1,1,1,1,1,1,1,1,0)}
                            [/case]
                            [case]
                                value=3
                                {VARIABLE_OP spawn_type rand (Spearman_steel,Spearman_steel,Spearman_steel,Lieutenant_steel,Javelineer_steel,Swordsman_steel,Dark Adept_steel,Dark Adept_steel,Dark Adept_steel,Fencer_steel,Fencer_steel,Fencer_steel,Duelist_steel,Bowman_steel,Bowman_steel,Bowman_steel,Longbowman_steel)}
                                {VARIABLE_OP did_spawn rand (1,1,1,1,1,1,1,0)}
                            [/case]
                            [case]
                                value=4
                                {VARIABLE_OP spawn_type rand (Spearman_steel,Spearman_steel,Spearman_steel,Lieutenant_steel,Javelineer_steel,Swordsman_steel,Dark Adept_steel,Dark Adept_steel,Dark Adept_steel,Fencer_steel,Fencer_steel,Bowman_steel,Bowman_steel,Longbowman_steel)}
                                {VARIABLE_OP did_spawn rand (1,1,0)}
                            [/case]
                            [case]
                                value=5
                                {VARIABLE_OP spawn_type rand (Spearman_steel,Spearman_steel,Lieutenant_steel,Javelineer_steel,Swordsman_steel,Dark Adept_steel,Dark Adept_steel,Fencer_steel,Fencer_steel,Fencer_steel,Bowman_steel,Longbowman_steel)}
                                {VARIABLE_OP did_spawn rand (1,1,0)}
                            [/case]
                            [case]
                                value=6
                                {VARIABLE_OP spawn_type rand (Spearman_steel,Spearman_steel,Javelineer_steel,Swordsman_steel,Dark Adept_steel,Dark Adept_steel,Fencer_steel,Fencer_steel,Bowman_steel,Longbowman_steel)}
                                {VARIABLE_OP did_spawn rand (1,0)}
                            [/case]
                            [case]
                                value=7
                                {VARIABLE_OP spawn_type rand (Spearman_steel,Spearman_steel,Javelineer_steel,Swordsman_steel,Dark Adept_steel,Dark Adept_steel,Fencer_steel,Fencer_steel,Bowman_steel,Longbowman_steel)}
                                {VARIABLE_OP did_spawn rand (1,1,0,0,0)}
                            [/case]
                            [case]
                                value=8
                                {VARIABLE_OP spawn_type rand (Spearman_steel,Spearman_steel,Javelineer_steel,Dark Adept_steel,Dark Adept_steel,Fencer_steel,Fencer_steel,Bowman_steel,Longbowman_steel)}
                                {VARIABLE_OP did_spawn rand (1,0,0)}
                            [/case]
                            [case]
                                value=9
                                {VARIABLE_OP spawn_type rand (Spearman_steel,Dark Adept_steel,Fencer_steel,Bowman_steel)}
                                {VARIABLE_OP did_spawn rand (1,0,0,0)}
                            [/case]
                        [/switch]
                        [if]
                            [variable]
                                name=did_spawn
                                equals=1
                            [/variable]
                            [then]
#ifdef HARD
                                {GENERIC_UNIT {SIDE} $spawn_type {X} {Y}}
#endif
#ifdef NORMAL
                                {VARIABLE_OP did_really_spawn rand (1,1,1,1,0)}
                                [if]
                                    [variable]
                                        name=did_really_spawn
                                        equals=1
                                    [/variable]
                                    [then]
                                        {GENERIC_UNIT {SIDE} $spawn_type {X} {Y}}
                                    [/then]
                                [/if]
#endif
#ifdef EASY
                                {VARIABLE_OP did_really_spawn rand (1,1,0)}
                                [if]
                                    [variable]
                                        name=did_really_spawn
                                        equals=1
                                    [/variable]
                                    [then]
                                        {GENERIC_UNIT {SIDE} $spawn_type {X} {Y}}
                                    [/then]
                                [/if]
#endif
                            [/then]
                        [/if]
                    [/then]
                [/if]
            [/then]
        [/if]
        {CLEAR_VARIABLE do_spawn}
        {CLEAR_VARIABLE did_spawn}
        {CLEAR_VARIABLE did_really_spawn}
        {CLEAR_VARIABLE spawn_type}
    [/event]
#enddef

#define ORIGIN NUMBER COORDINATES
    [if]
        [variable]
            name=last_scenario
            equals={NUMBER}
        [/variable]
        [then]
            [place_shroud]
                side=1
                x,y=1-999,1-999
            [/place_shroud]
            [teleport]
                [filter]
                    id=Efraim
                [/filter]
                x,y={COORDINATES}
                clear_shroud=yes
                animate=no
            [/teleport]
        [/then]
    [/if]
#enddef

#define TRANSITION LOCATION DESC_LOCATION NAME ID
    [label]
        x,y={DESC_LOCATION}
        text={NAME}
        color=255,255,255
    [/label]
    [event]
        name=moveto
        first_time_only=no
        [filter]
            side=1
            x,y={LOCATION}
        [/filter]
        [message]
            speaker=narrator
            message= _"Do you want to go to location: " + {NAME} + _"?"
            [option]
                label=_"Yes"
                [command]
                    [endlevel]
                        result=victory
                        bonus=no
                        next_scenario={ID}
                        linger_mode=no
                        carryover_report=no
                        {NEW_GOLD_CARRYOVER 100}
                    [/endlevel]
                [/command]
            [/option]
            [option]
                label=_"No"
                [command]
                [/command]
            [/option]
        [/message]
    [/event]
#enddef

#define EPIC_SPELLS ID VARIABLE_NAME CASTING_FRAME
    [set_menu_item]
        id=2epic_spells-{ID}
        description= _ "Cast a greater spell"
        [show_if]
            [have_unit]
                x,y=$x1,$y1
                side=$side_number
                id={ID}
            [/have_unit]
            [and]
                [variable]
                    name={VARIABLE_NAME}
                    greater_than_equal_to=1
                [/variable]
            [/and]
        [/show_if]
        [command]
            [if]
                [have_unit]
                    x,y=$x1,$y1
                    side=$side_number
                    id={ID}
                [/have_unit]
                [then]
                    [message]
                        speaker=narrator
                        message= _ "What do you want to cast?
Spells remaining: " + ${VARIABLE_NAME}
                        [option]
                            label= _ "Undead superiority: Turns enemy undead to your side. Costs as much as two spells cost."
                            [show_if]
                                [variable]
                                    name=sc22_undead
                                    equals=1
                                [/variable]
                                [and]
                                    [variable]
                                        name={VARIABLE_NAME}
                                        greater_than_equal_to=2
                                    [/variable]
                                [/and]
                            [/show_if]
                            [command]
                                {MODIFY_UNIT side=4 side 1}
                                {VARIABLE sc22_undead 2}
                                {VARIABLE_OP {VARIABLE_NAME} sub 2}
                            [/command]
                        [/option]
                        [option]
                            label= _ "Shades: Will summon a group of spiritual undead out from nowhere."
                            [command]
                                {VARIABLE shade_count 0}
                                [while]
                                    [variable]
                                        name=shade_count
                                        less_than=6
                                    [/variable]
                                    [do]
                                        {VARIABLE_OP summon_type rand (Ghost,Ghost,Ghost,Ghost,Ghost,Ghost,Wraith,Wraith,Shadow,Shadow,Ghost,Ghost,Ghost,Ghost,Ghost,Ghost,Wraith,Wraith,Shadow,Shadow,Nightgaunt,Spectre,Reaper)}
                                        [unit]
                                            type=$summon_type
                                            side=1
                                            x,y=$x1,$y1
                                        [/unit]
                                        {VARIABLE_OP shade_count add 1}
                                    [/do]
                                [/while]
                                {CLEAR_VARIABLE shade_count}
                                {CLEAR_VARIABLE summon_type}
                                {VARIABLE_OP {VARIABLE_NAME} sub 1}
                            [/command]
                        [/option]
                        [option]
                            label=_"Bones and Dust: Will summon a group of skeletal undead out from nowhere."
                            [command]
                                {VARIABLE shade_count 0}
                                [while]
                                    [variable]
                                        name=shade_count
                                        less_than=6
                                    [/variable]
                                    [do]
                                        {VARIABLE_OP summon_type rand (Skeleton,Skeleton Archer,Skeleton,Skeleton Archer,Skeleton,Skeleton Archer,Chocobone,Deathblade,Revenant,Bone Shooter,Skeleton,Skeleton Archer,Skeleton,Skeleton Archer,Skeleton,Skeleton Archer,Chocobone,Deathblade,Revenant,Bone Shooter,Grim Knight,Draug,Banebow,Deathlord,Soul Shooter)}
                                        [unit]
                                            type=$summon_type
                                            side=1
                                            x,y=$x1,$y1
                                        [/unit]
                                        {VARIABLE_OP shade_count add 1}
                                    [/do]
                                [/while]
                                {CLEAR_VARIABLE shade_count}
                                {CLEAR_VARIABLE summon_type}
                                {VARIABLE_OP {VARIABLE_NAME} sub 1}
                            [/command]
                        [/option]
                        [option]
                            label=_"Soulgate: Will call allies from ages long past (recall older units)"
                            [command]
                                {VARIABLE shade_count 0}
                                [while]
                                    [variable]
                                        name=shade_count
                                        less_than=6
                                    [/variable]
                                    [do]
                                        [if]
                                            [variable]
                                                name=Valhalla.length
                                                greater_than=0
                                            [/variable]
                                            [then]
                                                [unstore_unit]
                                                    variable=Valhalla[0]
                                                    find_vacant=yes
                                                    x=$x1
                                                    y=$y1
                                                    fire_event=yes
                                                [/unstore_unit]
                                                {CLEAR_VARIABLE Valhalla[0]}
                                            [/then]
                                            [else]
                                                [if]
                                                    [variable]
                                                        name=Valhalla2.length
                                                        greater_than=0
                                                    [/variable]
                                                    [then]
                                                        [unstore_unit]
                                                            variable=Valhalla2[0]
                                                            find_vacant=yes
                                                            x=$x1
                                                            y=$y1
                                                            fire_event=yes
                                                        [/unstore_unit]
                                                        {CLEAR_VARIABLE Valhalla2[0]}
                                                    [/then]
                                                    [else]
                                                        {VARIABLE_OP summon_type rand (Elvish Archer,Elvish Fighter,Elvish Scout,Elvish Shaman,Elvish Marksman,Elvish Ranger,Elvish Captain,Elvish Hero,Elvish Rider,Elvish Outrider,Elvish Druid,Elvish Sorceress,Fencer,Duelist,Thief,Rogue,Skeleton,Skeleton Archer,Chocobone,Deathblade,Revenant,Bone Shooter,Ghost,Wraith,Shadow)}
                                                        [unit]
                                                            type=$summon_type
                                                            side=1
                                                            x,y=$x1,$y1
                                                        [/unit]
                                                    [/else]
                                                [/if]
                                            [/else]
                                        [/if]
                                        {VARIABLE_OP shade_count add 1}
                                    [/do]
                                [/while]
                                {CLEAR_VARIABLE shade_count}
                                {CLEAR_VARIABLE summon_type}
                                {VARIABLE_OP {VARIABLE_NAME} sub 1}
                            [/command]
                        [/option]
                        [option]
                            label=_"Meteor: Adds a new attack that deals a lot of damage to all enemies in range, but the attack disappears after being used once"
                            [command]
                                [object]
                                    silent=yes
                                    duration=scenario	#Will be removed after casting anyway
                                    temporary=meteor
                                    [filter]
                                        id={ID}
                                    [/filter]
                                    [effect]
                                        apply_to=new_attack
                                        damage=125
                                        number=1
                                        type=fire
                                        name=meteor
                                        description= _"meteor"
                                        icon=attacks/meteor.png
                                        type=fire
                                        range=ranged
                                        defense_weight=0
                                        [specials]
                                            [chance_to_hit]
                                                id=always_hits
                                                name= _ "always hits"
                                                description= _ "This attack has a 100% chance to hit."
                                                value=100
                                                cumulative=no
                                            [/chance_to_hit]
                                        [/specials]
                                    [/effect]
                                    [effect]
                                        apply_to=new_animation
                                        name=meteor
                                        [attack_anim]
                                            [filter_attack]
                                                name=meteor
                                            [/filter_attack]

                                            missile_start_time=-400

                                            [if]
                                                direction=n,ne,nw

                                                [missile_frame]
                                                    duration=100
                                                    halo="halo/meteor-1.png"
                                                    offset=1.0
                                                [/missile_frame]
                                                [missile_frame]
                                                    duration=100
                                                    halo="halo/meteor-2.png"
                                                    offset=1.0
                                                [/missile_frame]
                                                [missile_frame]
                                                    duration=100
                                                    halo="halo/meteor-3.png"
                                                    offset=1.0
                                                [/missile_frame]
                                                [missile_frame]
                                                    duration=100
                                                    halo="halo/meteor-4.png"
                                                    offset=1.0
                                                [/missile_frame]
                                                [missile_frame]
                                                    duration=100
                                                    halo="halo/meteor-5.png"
                                                    offset=1.0
                                                [/missile_frame]
                                                [missile_frame]
                                                    duration=100
                                                    halo="halo/meteor-6.png"
                                                    offset=1.0
                                                [/missile_frame]
                                                [missile_frame]
                                                    duration=100
                                                    halo="halo/meteor-7.png"
                                                    offset=1.0
                                                [/missile_frame]
                                                [missile_frame]
                                                    duration=100
                                                    halo="halo/meteor-8.png"
                                                    offset=1.0
                                                [/missile_frame]
                                                [missile_frame]
                                                    duration=100
                                                    halo="halo/meteor-9.png"
                                                    offset=1.0
                                                [/missile_frame]
                                            [/if]
                                            [else]
                                                direction=s,se,sw

                                                [missile_frame]
                                                    duration=100
                                                    halo="halo/meteor-1.png~FL(vert)"
                                                    offset=1.0
                                                [/missile_frame]
                                                [missile_frame]
                                                    duration=100
                                                    halo="halo/meteor-2.png~FL(vert)"
                                                    offset=1.0
                                                [/missile_frame]
                                                [missile_frame]
                                                    duration=100
                                                    halo="halo/meteor-3.png~FL(vert)"
                                                    offset=1.0
                                                [/missile_frame]
                                                [missile_frame]
                                                    duration=100
                                                    halo="halo/meteor-4.png~FL(vert)"
                                                    offset=1.0
                                                [/missile_frame]
                                                [missile_frame]
                                                    duration=100
                                                    halo="halo/meteor-5.png~FL(vert)"
                                                    offset=1.0
                                                [/missile_frame]
                                                [missile_frame]
                                                    duration=100
                                                    halo="halo/meteor-6.png~FL(vert)"
                                                    offset=1.0
                                                [/missile_frame]
                                                [missile_frame]
                                                    duration=100
                                                    halo="halo/meteor-7.png~FL(vert)"
                                                    offset=1.0
                                                [/missile_frame]
                                                [missile_frame]
                                                    duration=100
                                                    halo="halo/meteor-8.png~FL(vert)"
                                                    offset=1.0
                                                [/missile_frame]
                                                [missile_frame]
                                                    duration=100
                                                    halo="halo/meteor-9.png~FL(vert)"
                                                    offset=1.0
                                                [/missile_frame]
                                            [/else]
                                            [frame]
                                                begin=-500
                                                end=-300
                                                frame={CASTING_FRAME}
                                                sound=fire.wav
                                            [/frame]
                                        [/attack_anim]
                                    [/effect]
                                [/object]
                                {VARIABLE_OP {VARIABLE_NAME} sub 1}
                            [/command]
                        [/option]
                        [option]
                            label=_"Lavaflow: Will add an attack that creates a river of lava and deals 50 points of fire damage to all units in its path (may make some locations unreachable); the attack disappears after use"
                            [command]
                                [object]
                                    silent=yes
                                    duration=scenario	#Will be removed after casting anyway
                                    temporary=lavaflow
                                    [filter]
                                        id={ID}
                                    [/filter]
                                    [effect]
                                        apply_to=new_attack
                                        damage=20
                                        number=1
                                        type=fire
                                        name=lavaflow
                                        description= _"lavaflow"
                                        icon=attacks/fire-blast.png
                                        type=fire
                                        range=ranged
                                        defense_weight=0
                                        [specials]
                                            [chance_to_hit]
                                                id=always_hits
                                                name= _ "always hits"
                                                description= _ "This attack has a 100% chance to hit."
                                                value=100
                                                cumulative=no
                                            [/chance_to_hit]
                                        [/specials]
                                    [/effect]
                                    [effect]
                                        apply_to=new_animation
                                        name=lavaflow
                                        [attack_anim]
                                            [filter_attack]
                                                name=lavaflow
                                            [/filter_attack]
                                            [frame]
                                                begin=0
                                                end=100
                                                frame={CASTING_FRAME}
                                                sound=fire.wav
                                            [/frame]
                                        [/attack_anim]
                                    [/effect]
                                [/object]
                                {VARIABLE_OP {VARIABLE_NAME} sub 1}
                            [/command]
                        [/option]
                        [option]
                            label=_"Nothing."
                            [command]
                            [/command]
                        [/option]
                    [/message]
                [/then]
                [else]
                [/else]
            [/if]
        [/command]
    [/set_menu_item]
#enddef
#define LAVA_KILL X Y
    [terrain]
        x={X}
        y={Y}
        terrain=Ql
    [/terrain]
    [redraw]
    [/redraw]
    [harm_unit]
        [filter]
            x={X}
            y={Y}
        [/filter]
        amount=$(5d10)
        damage_type=fire
        kill=yes
    [/harm_unit]
    [remove_item]
        image=scenery/trapdoor-closed.png
        x,y={X},{Y}
    [/remove_item]
    [event]
        id=spawn_point_{X}_{Y}
        remove=yes
    [/event]
#enddef
#define SUMMON_OPTION TYPE LANGUAGE_TYPE COST
    [option]
        label={TYPE} + _"(" + {COST} + _"gold)"
        side_for=$side_number
        [command]
            [if]
                [variable]
                    name=gold
                    greater_than_equal_to={COST}
                [/variable]
                [then]
                    [gold]
                        amount=-{COST}
                        side=$side_number
                    [/gold]
                    [unit]
                        type={TYPE}
                        side=$side_number
                        x,y=$x1,$y1
                        moves=0
                        attacks=0
                    [/unit]
                    [update_stats]
                        x,y=$x1,$y1
                    [/update_stats]
                [/then]
                [else]
                    [message]
                        speaker=narrator
                        message=_"You don't have enough gold for this."
                        side_for=$side_number
                    [/message]
                [/else]
            [/if]
        [/command]
    [/option]
#enddef

#define CAMPAIGN5_EVENTS
    [event]
        name=prestart
        [unit]
            type=Chapter5 Event Loader
            side=1
            x,y=1,1
        [/unit]
        [kill]
            type=Chapter5 Event Loader
            animate=no
        [/kill]
    [/event]
#enddef

#define CAMPAIGN5_EVENTS_LIST
    [event]
        name=last breath
        [filter]
            id=Lethalia
        [/filter]
        [message]
            speaker=unit
            message= _ "Noooooo!"
        [/message]
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]
    [event]
        name=die
        [filter]
            id=Efraim
        [/filter]
        [message]
            speaker=second_unit
            message= _ "Hehe, I knew we are stronger than mere liches..."
        [/message]
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]
    [event]
        name=start
        [set_menu_item]
            id=1summoning
            description=_"Summon a unit"
            [filter_location]
                [filter_adjacent_location]
                    [filter]
                        canrecruit=yes
                        side=$side_number
                    [/filter]
                [/filter_adjacent_location]
                [not]
                    [filter]
                    [/filter]
                [/not]
            [/filter_location]
            [command]
                [store_gold]
                    side=$side_number
                    variable=gold
                [/store_gold]
                [message]
                    speaker=narrator
                    message=_"What do you want to summon here?"
                    side_for=$side_number
                    {SUMMON_OPTION Skeleton _"Skeleton" 23}
                    {SUMMON_OPTION "Skeleton Archer" _"Skeleton Archer" 21}
                    {SUMMON_OPTION Ghost _"Ghost" 30}
                    {SUMMON_OPTION "Walking Corpse" _"Walking Corpse" 12}
                    [option]
                        label=_"Nothing."
                        [command]
                        [/command]
                    [/option]
                [/message]
                {CLEAR_VARIABLE gold}
            [/command]
        [/set_menu_item]
        {EPIC_SPELLS Efraim efraim_spells_left "units/human-outlaws/assassin-throwknife2.png"}
        {EPIC_SPELLS Lethalia lethalia_spells_left "units/seer-magic.png"}
        [set_menu_item]
            id=5confautorecall
            description=_ "Configure Autorecall"
            [command]
                [if]
                    [variable]
                        name=max_autorecall
                        greater_than_equal_to=8
                    [/variable]
                    [else]
                        {VARIABLE max_autorecall 8}
                    [/else]
                [/if]
                {VARIABLE next_autorecall_price "$($($max_autorecall-7)*25)"}
#ifdef EASY
                {VARIABLE_OP next_autorecall_price divide 1.5}
#endif
#ifdef NORMAL
                {VARIABLE_OP next_autorecall_price divide 1.2}
#endif
                [store_gold]
                    side=1
                    variable=gold
                [/store_gold]
                #Initialise the variable listing them
                {VARIABLE autorecall_listing[0].entry _"Here is a list of all units you have set to be autorecalled. You can add any number of units, but only the first $max_autorecall units are autorecalled."}
                #Clear the units that are already dead from the list, add those who are still alive in the list in the message
                {FOREACH autorecall i}
                    [store_unit]
                        [filter]
                            id=$autorecall[$i].id
                        [/filter]
                        variable=to_autorecall
                        kill=no
                    [/store_unit]
                    [if]
                        [variable]
                            name=to_autorecall.length
                            equals=0
                        [/variable]
                        [then]
                            {CLEAR_VARIABLE autorecall[$i]}
                        [/then]
                        [else]
                            {VARIABLE autorecall_listing[$autorecall_listing.length].entry "$to_autorecall.name| ($to_autorecall.language_name|)"}
                            {VARIABLE "autorecall_listing[$($autorecall_listing.length-1)].id" $to_autorecall.id}
                        [/else]
                    [/if]
                    #Remove duplicates
                    {VARIABLE authentic yes}
                    {FOREACH unique j}
                        [if]
                            [variable]
                                name=unique[$j].id
                                equals=$autorecall[$i].id
                            [/variable]
                            [then]
                                {VARIABLE authentic no}
                            [/then]
                        [/if]
                    {NEXT j}
                    [if]
                        [variable]
                            name=authentic
                            equals=yes
                        [/variable]
                        [then]
                            {VARIABLE unique[$unique.length].id $autorecall[$i].id}
                        [/then]
                        [else]
                            {CLEAR_VARIABLE autorecall[$i]}
                            {VARIABLE_OP i sub 1}
                        [/else]
                    [/if]
                    {CLEAR_VARIABLE to_autorecall}
                {NEXT i}
                {CLEAR_VARIABLE unique}
                #Now, we have the list free of dead units, it's time show a message
                [set_variable]
                    name=intro_message
                    [join]
                        variable=autorecall_listing
                        key=entry
                        separator="
"
                        remove_empty=yes
                    [/join]
                [/set_variable]
                [message]
                    speaker=narrator
                    image="wesnoth-icon.png"
                    message=$intro_message
                    [option]
                        label=_ "Add units"
                        [command]
                            #Repeat until done
                            {VARIABLE done no}
                            [while]
                                [variable]
                                    name=done
                                    equals=no
                                [/variable]
                                [do]
                                    [set_variables]
                                        name=add_message
                                        mode=replace
                                        [value]
                                            speaker=narrator
                                            image="wesnoth-icon.png"
                                            message= _ "Which unit would you like to add?"
                                            [option]
                                                label=_ "Back"
                                                [command]
                                                    {VARIABLE done yes}
                                                [/command]
                                            [/option]
                                        [/value]
                                    [/set_variables]
                                    #Store all units
                                    [store_unit]
                                        [filter]
                                            side=1
                                            [not]
                                                id=Efraim
                                            [/not]
                                            [not]
                                                id=Lethalia
                                            [/not]
                                            [not]
                                                id=Manta
                                            [/not]
                                        [/filter]
                                        variable=unit_list
                                        kill=no
                                    [/store_unit]
                                    #Add them to the list
                                    {FOREACH unit_list i}
                                        [set_variables]
                                            name=add_message.option[$add_message.option.length]
                                            mode=replace
                                            [value]
                                                message=_ "$unit_list[$i].name| ($unit_list[$i].language_name|)"
                                                [command]
                                                    {VARIABLE autorecall[$autorecall.length].id $unit_list[$i].id}
                                                [/command]
                                            [/value]
                                        [/set_variables]
                                    {NEXT i}
                                    [insert_tag]
                                        name=message
                                        variable=add_message
                                    [/insert_tag]
                                [/do]
                            [/while]
                            {CLEAR_VARIABLE add_message,done}
                            #Remove duplicates
                            {FOREACH autorecall i}
                                [store_unit]
                                    [filter]
                                        id=$autorecall[$i].id
                                    [/filter]
                                    variable=to_autorecall
                                    kill=no
                                [/store_unit]
                                {VARIABLE authentic yes}
                                {FOREACH unique j}
                                    [if]
                                        [variable]
                                            name=unique[$j].id
                                            equals=$autorecall[$i].id
                                        [/variable]
                                        [then]
                                            {VARIABLE authentic no}
                                        [/then]
                                    [/if]
                                {NEXT j}
                                [if]
                                    [variable]
                                        name=authentic
                                        equals=yes
                                    [/variable]
                                    [then]
                                        {VARIABLE unique[$unique.length].id $autorecall[$i].id}
                                    [/then]
                                    [else]
                                        {CLEAR_VARIABLE autorecall[$i]}
                                        {VARIABLE_OP i sub 1}
                                    [/else]
                                [/if]
                                {CLEAR_VARIABLE to_autorecall}
                            {NEXT i}
                            {CLEAR_VARIABLE unique}
                        [/command]
                    [/option]
                    [option]
                        label=_ "Remove units"
                        [command]
                            #Repeat until done
                            {VARIABLE done no}
                            [while]
                                [variable]
                                    name=done
                                    equals=no
                                [/variable]
                                [do]
                                    [set_variables]
                                        name=remove_message
                                        mode=replace
                                        [value]
                                            speaker=narrator
                                            image="wesnoth-icon.png"
                                            message= _ "Which unit would you like to remove?"
                                            [option]
                                                label=_ "Back"
                                                [command]
                                                    {VARIABLE done yes}
                                                [/command]
                                            [/option]
                                        [/value]
                                    [/set_variables]
                                    {FOREACH autorecall i}
                                        [store_unit]
                                            [filter]
                                                id=$autorecall[$i].id
                                            [/filter]
                                            variable=to_autorecall
                                            kill=no
                                        [/store_unit]
                                        [set_variables]
                                            name=remove_message.option[$remove_message.option.length]
                                            mode=replace
                                            [value]
                                                message=_ "$to_autorecall.name| ($to_autorecall.language_name|)"
                                                [command]
                                                    {CLEAR_VARIABLE autorecall[$i]}
                                                [/command]
                                            [/value]
                                        [/set_variables]
                                        {CLEAR_VARIABLE to_autorecall}
                                    {NEXT i}
                                    [insert_tag]
                                        name=message
                                        variable=remove_message
                                    [/insert_tag]
                                [/do]
                            [/while]
                            {CLEAR_VARIABLE remove_message,done}
                        [/command]
                        [show_if]
                            [variable]
                                name=autorecall.length
                                greater_than=0
                            [/variable]
                        [/show_if]
                    [/option]
                    [option]
                        label=_ "Buy space to recall more units automatically ($next_autorecall_price)"
                        [show_if]
                            [variable]
                                name=gold
                                greater_than_equal_to=$next_autorecall_price
                            [/variable]
                        [/show_if]
                        [command]
                            [gold]
                                side=1
                                amount="$(-1*$next_autorecall_price)"
                            [/gold]
                            {VARIABLE_OP max_autorecall add 1}
                        [/command]
                    [/option]
                    [option]
                        label=_ "Back"
                        [command]
                        [/command]
                    [/option]
                [/message]
                {CLEAR_VARIABLE to_autorecall,intro_message,autorecall_listing,authentic,unique}
            [/command]
        [/set_menu_item]
    [/event]
    [event]
        name=attacker hits,attacker misses
        first_time_only=no
        [filter_attack]
            range=melee
        [/filter_attack]
        [filter_second]
            type=Royal Guard_steel
            [or]
                type=Grand Marshal_steel
            [/or]
        [/filter_second]
        [harm_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            [filter_second]
                x,y=$x2,$y2
            [/filter_second]
            amount=10
            type=impact
            fire_event=yes
            experience=no
            animate=no
        [/harm_unit]
    [/event]
    [event]
        name=defender hits,defender misses
        first_time_only=no
        [filter]
            type=Royal Guard_steel
            [or]
                type=Grand Marshal_steel
            [/or]
        [/filter]
        [filter_attack]
            range=melee
        [/filter_attack]
        [harm_unit]
            [filter]
                x,y=$x2,$y2
            [/filter]
            [filter_second]
                x,y=$x1,$y1
            [/filter_second]
            amount=10
            type=impact
            fire_event=yes
            experience=no
            animate=no
        [/harm_unit]
    [/event]
    [event]
        name=attack end
        first_time_only=no

        [filter_attack]
            name=meteor
        [/filter_attack]

        # Harm units (other than the defender) next to the attacker.
        [harm_unit]
            [filter]
                [filter_adjacent]
                    x,y=$x2,$y2
                [/filter_adjacent]
                [not]
                    side=1
                [/not]
                # The defender was already damaged.
                [not]
                    x,y=$x2,$y2
                [/not]
            [/filter]
            [filter_second]
                x,y=$x1,$y1
            [/filter_second]

            amount=$(10d15)
            damage_type=fire
            fire_event=yes
            experience=yes
            animate=no
        [/harm_unit]

        # Harm units two hexes away from the attacker (half damage).
        [harm_unit]
            [filter]
                [filter_location]
                    # Exclude the units that just received full damage.
                    [not]
                        x,y=$x2,$y2
                        radius=1
                    [/not]
                    # Include the remaining units within two hexes.
                    [and]
                        x,y=$x2,$y2
                        radius=2
                        # The blaze cannot go through walls.
                        [filter_radius]
                            terrain=!,X*,X*^*,*^X*
                        [/filter_radius]
                    [/and]
                [/filter_location]
                # We do not hurt our own units.
                [not]
                    side=$unit.side
                [/not]
            [/filter]
            [filter_second]
                x,y=$x1,$y1
            [/filter_second]

            amount=$(10d10)
            damage_type=fire
            fire_event=yes
            experience=no
            animate=no
        [/harm_unit]
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=gifted
            kill=yes
        [/store_unit]
        {FOREACH gifted.modifications.object i}
            [if]
                [variable]
                    name=gifted.modifications.object[$i].temporary
                    equals=meteor
                [/variable]
                [then]
                    {CLEAR_VARIABLE gifted.modifications.object[$i]}
                [/then]
            [/if]
        {NEXT i}

        [unit]	#Doesn't flash white like the previous way to do it
            side=$gifted.side
            x=$gifted.x
            y=$gifted.y
            experience=$gifted.experience
            canrecruit=$gifted.canrecruit
            variation=$gifted.variation
            type=$gifted.type
            id=$gifted.id
            moves=$gifted.moves
            hitpoints=$gifted.hitpoints
            gender=$gifted.gender
            name=$gifted.name
            facing=$gifted.facing
            extra_recruit=$gifted.extra_recruit
            attacks_left=0
            moves=0
            underlying_id=$gifted.underlying_id
            unrenamable=$gifted.unrenamable
            animate=no
            [insert_tag]
                name=status
                variable=gifted.status
            [/insert_tag]
            [insert_tag]
                name=modifications
                variable=gifted.modifications
            [/insert_tag]
            [insert_tag]
                name=variables
                variable=gifted.variables
            [/insert_tag]
        [/unit]
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=gifted2
            kill=no
        [/store_unit]
        {VARIABLE gifted2.moves $gifted.moves}
        {VARIABLE gifted2.attacks_left $gifted.attacks_left}
        {VARIABLE gifted2.experience $gifted.experience}
        [unstore_unit]
            variable=gifted2
            find_vacant=no
        [/unstore_unit]
        {UPDATE_STATS}
        {CLEAR_VARIABLE gifted}
        {CLEAR_VARIABLE gifted2}
    [/event]

    [event]
        name=attacker_hits
        first_time_only=no

        [filter_attack]
            name=lavaflow
        [/filter_attack]
        {VARIABLE_OP random_path rand (0,1)}
        [if]
            [variable]
                name=gifted.facing
                equals=n
            [/variable]
            [then]
                {LAVA_KILL $x2 $y2}
                {LAVA_KILL $x2 "$($y2-1)"}
                {LAVA_KILL $x2 "$($y2-2)"}
                {LAVA_KILL $x2 "$($y2-3)"}
                [if]
                    [variable]
                        name=random_path
                        equals=0
                    [/variable]
                    [then]
                        {LAVA_KILL "$($x2+1)" "$($y2-3)"}
                        {LAVA_KILL $x2 "$($y2-4)"}
                        {LAVA_KILL "$($x2-1)" "$($y2-4)"}
                        {LAVA_KILL "$($x2+2)" "$($y2-4)"}
                        {LAVA_KILL $x2 "$($y2-5)"}
                        {LAVA_KILL "$($x2-2)" "$($y2-5)"}
                        {LAVA_KILL "$($x2+3)" "$($y2-5)"}
                        {LAVA_KILL $x2 "$($y2-6)"}
                    [/then]
                    [else]
                        {LAVA_KILL "$($x2-1)" "$($y2-3)"}
                        {LAVA_KILL $x2 "$($y2-4)"}
                        {LAVA_KILL "$($x2+1)" "$($y2-4)"}
                        {LAVA_KILL "$($x2-2)" "$($y2-4)"}
                        {LAVA_KILL $x2 "$($y2-5)"}
                        {LAVA_KILL "$($x2+2)" "$($y2-5)"}
                        {LAVA_KILL "$($x2-3)" "$($y2-5)"}
                        {LAVA_KILL $x2 "$($y2-6)"}
                    [/else]
                [/if]
            [/then]
            [else]
                [if]
                    [variable]
                        name=gifted.facing
                        equals=s
                    [/variable]
                    [then]
                        {LAVA_KILL $x2 $y2}
                        {LAVA_KILL $x2 "$($y2+1)"}
                        {LAVA_KILL $x2 "$($y2+2)"}
                        {LAVA_KILL $x2 "$($y2+3)"}
                        [if]
                            [variable]
                                name=random_path
                                equals=0
                            [/variable]
                            [then]
                                {LAVA_KILL "$($x2+1)" "$($y2+3)"}
                                {LAVA_KILL $x2 "$($y2+4)"}
                                {LAVA_KILL "$($x2-1)" "$($y2+4)"}
                                {LAVA_KILL "$($x2+2)" "$($y2+4)"}
                                {LAVA_KILL $x2 "$($y2+5)"}
                                {LAVA_KILL "$($x2-2)" "$($y2+5)"}
                                {LAVA_KILL "$($x2+3)" "$($y2+5)"}
                                {LAVA_KILL $x2 "$($y2+6)"}
                            [/then]
                            [else]
                                {LAVA_KILL "$($x2-1)" "$($y2+3)"}
                                {LAVA_KILL $x2 "$($y2+4)"}
                                {LAVA_KILL "$($x2+1)" "$($y2+4)"}
                                {LAVA_KILL "$($x2-2)" "$($y2+4)"}
                                {LAVA_KILL $x2 "$($y2+5)"}
                                {LAVA_KILL "$($x2+2)" "$($y2+5)"}
                                {LAVA_KILL "$($x2-3)" "$($y2+5)"}
                                {LAVA_KILL $x2 "$($y2+6)"}
                            [/else]
                        [/if]
                    [/then]
                    [else]
                        {VARIABLE direction_x "$($x2-$x1)"}
                        {VARIABLE direction_y "$($y2-$y1)"}
                        {LAVA_KILL $x2 $y2}
                        {LAVA_KILL "$($x2+$direction_x)" "$($y2+$direction_y)"}
                        {LAVA_KILL "$($x2+2*$direction_x)" "$($y2+2*$direction_y)"}
                        {LAVA_KILL "$($x2+3*$direction_x)" "$($y2+3*$direction_y)"}
                        [if]
                            [variable]
                                name=random_path
                                equals=0
                            [/variable]
                            [then]
                                {LAVA_KILL "$($x2+3*$direction_x-$direction_y)" "$($y2+3*$direction_y-$direction_x)"}
                                {LAVA_KILL "$($x2+4*$direction_x)" "$($y2+4*$direction_y)"}
                                {LAVA_KILL "$($x2+4*$direction_x+$direction_y)" "$($y2+4*$direction_y+$direction_x)"}
                                {LAVA_KILL "$($x2+3*$direction_x-2*$direction_y)" "$($y2+3*$direction_y-2*$direction_x)"}
                                {LAVA_KILL "$($x2+5*$direction_x)" "$($y2+5*$direction_y)"}
                                {LAVA_KILL "$($x2+4*$direction_x+2*$direction_y)" "$($y2+4*$direction_y+2*$direction_x)"}
                                {LAVA_KILL "$($x2+3*$direction_x-3*$direction_y)" "$($y2+3*$direction_y-3*$direction_x)"}
                                {LAVA_KILL "$($x2+6*$direction_x)" "$($y2+6*$direction_y)"}
                            [/then]
                            [else]
                                {LAVA_KILL "$($x2+3*$direction_x+$direction_y)" "$($y2+3*$direction_y+$direction_x)"}
                                {LAVA_KILL "$($x2+4*$direction_x)" "$($y2+4*$direction_y)"}
                                {LAVA_KILL "$($x2+4*$direction_x-$direction_y)" "$($y2+4*$direction_y-$direction_x)"}
                                {LAVA_KILL "$($x2+3*$direction_x+2*$direction_y)" "$($y2+3*$direction_y+2*$direction_x)"}
                                {LAVA_KILL "$($x2+5*$direction_x)" "$($y2+5*$direction_y)"}
                                {LAVA_KILL "$($x2+4*$direction_x-2*$direction_y)" "$($y2+4*$direction_y-2*$direction_x)"}
                                {LAVA_KILL "$($x2+3*$direction_x+3*$direction_y)" "$($y2+3*$direction_y+3*$direction_x)"}
                                {LAVA_KILL "$($x2+6*$direction_x)" "$($y2+6*$direction_y)"}
                            [/else]
                        [/if]
                    [/else]
                [/if]
            [/else]
        [/if]
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=gifted
            kill=yes
        [/store_unit]
        {FOREACH gifted.modifications.object i}
            [if]
                [variable]
                    name=gifted.modifications.object[$i].temporary
                    equals=lavaflow
                [/variable]
                [then]
                    {CLEAR_VARIABLE gifted.modifications.object[$i]}
                [/then]
            [/if]
        {NEXT i}

        [unit]	#Doesn't flash white like the previous way to do it
            side=$gifted.side
            x=$gifted.x
            y=$gifted.y
            experience=$gifted.experience
            canrecruit=$gifted.canrecruit
            variation=$gifted.variation
            type=$gifted.type
            id=$gifted.id
            moves=$gifted.moves
            hitpoints=$gifted.hitpoints
            gender=$gifted.gender
            name=$gifted.name
            facing=$gifted.facing
            extra_recruit=$gifted.extra_recruit
            attacks_left=0
            moves=0
            underlying_id=$gifted.underlying_id
            unrenamable=$gifted.unrenamable
            animate=no
            [insert_tag]
                name=status
                variable=gifted.status
            [/insert_tag]
            [insert_tag]
                name=modifications
                variable=gifted.modifications
            [/insert_tag]
            [insert_tag]
                name=variables
                variable=gifted.variables
            [/insert_tag]
        [/unit]
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=gifted2
            kill=no
        [/store_unit]
        {VARIABLE gifted2.moves $gifted.moves}
        {VARIABLE gifted2.attacks_left $gifted.attacks_left}
        {VARIABLE gifted2.experience $gifted.experience}
        [unstore_unit]
            variable=gifted2
            find_vacant=no
        [/unstore_unit]
        {UPDATE_STATS}
        {CLEAR_VARIABLE gifted}
        {CLEAR_VARIABLE gifted2}
    [/event]

    # Efraim and Lethalia can get scenario-long attacks (meteor, lava) but don't use them. As they are installed as objects with scenario TTL,
    # in the end of the scenario they are cleared and units rebuilt from scratch, so we need to rerun update_stats to have all LotI effects back
    [event]
        name=start
        [update_stats]
            side=1
            canrecruit=yes
        [/update_stats]
    [/event]

    {DROPS 10 13 (sword,sword,sword,bow,bow,bow,staff,staff,staff,axe,axe,axe,xbow,dagger,knife,mace,mace,spear) yes 2,3,4,5}
    [event]
        name=start
        {VARIABLE enemy_sides 2,3,4,5}
    [/event]
    [event]
        name=start
        {VARIABLE enemy_weakened 0}
        [if]
            [variable]
                name=sc09
                numerical_equals=1
            [/variable]
            [then]
                {VARIABLE_OP enemy_weakened add 1}
            [/then]
        [/if]
        [if]
            [variable]
                name=sc10
                numerical_equals=1
            [/variable]
            [then]
                {VARIABLE_OP enemy_weakened add 1}
            [/then]
        [/if]
        [if]
            [variable]
                name=sc13
                numerical_equals=1
            [/variable]
            [then]
                {VARIABLE_OP enemy_weakened add 1}
            [/then]
        [/if]
        [if]
            [variable]
                name=sc14
                numerical_equals=1
            [/variable]
            [then]
                {VARIABLE_OP enemy_weakened add 1}
            [/then]
        [/if]
        [if]
            [variable]
                name=sc16
                numerical_equals=1
            [/variable]
            [then]
                {VARIABLE_OP enemy_weakened add 1}
            [/then]
        [/if]
        [if]
            [variable]
                name=sc19
                numerical_equals=1
            [/variable]
            [then]
                {VARIABLE_OP enemy_weakened add 1}
            [/then]
        [/if]
        [if]
            [variable]
                name=sc21
                numerical_equals=1
            [/variable]
            [then]
                {VARIABLE_OP enemy_weakened add 1}
            [/then]
        [/if]
        [if]
            [variable]
                name=sc27
                numerical_equals=1
            [/variable]
            [then]
                {VARIABLE_OP enemy_weakened add 2}
            [/then]
        [/if]
    [/event]
#enddef

#define RECALL_ALL
    [event]
        name=prestart
        [recall]
            id=Lethalia
            show=no
        [/recall]
        [recall]
            id=Manta
            show=no
        [/recall]
        [recall]
            id=Efraim
            show=no
        [/recall]
        [if]
            [variable]
                name=max_autorecall
                greater_than_equal_to=8
            [/variable]
            [else]
                {VARIABLE max_autorecall 8}
            [/else]
        [/if]
        {VARIABLE recall_count $max_autorecall}
        {VARIABLE i 0}
        [while]
            [variable]
                name=i
                less_than=$autorecall.length
            [/variable]
            [and]
                [variable]
                    name=recall_count
                    greater_than=0
                [/variable]
            [/and]
            [do]
                [store_unit]
                    [filter]
                        id=$autorecall[$i].id
                    [/filter]
                    variable=to_autorecall
                    kill=no
                [/store_unit]
                [if]
                    [variable]
                        name=to_autorecall.length
                        equals=1
                    [/variable]
                    [then]
                        [recall]
                            id=$autorecall[$i].id
                            show=no
                        [/recall]
                        {VARIABLE_OP recall_count sub 1}
                    [/then]
                [/if]
                {VARIABLE_OP i add 1}
            [/do]
        [/while]
        [while]
            [variable]
                name=recall_count
                greater_than=1
            [/variable]
            [do]
                [recall]
                    show=no
                [/recall]
                {VARIABLE_OP recall_count sub 1}
            [/do]
        [/while]
        {CLEAR_VARIABLE recall_count,i}
    [/event]
#enddef

#define DOUBLE_SUN
    [time]
        id=dawn
        name= _ "Dawn"
        image=misc/time-schedules/default/schedule-dawn.png
        red=-15
        green=-15
        sound=ambient/morning.ogg
        lawful_bonus=0
    [/time]
    [time]
        id=morning_first
        name= _ "Morning"
        image=misc/time-schedules/default/schedule-morning.png
        lawful_bonus=25
        red=5
        green=5
    [/time]
    [time]
        id=afternoon_first
        name= _ "Afternoon"
        image=misc/time-schedules/default/schedule-afternoon.png
        lawful_bonus=25
        red=5
        green=5
    [/time]
    [time]
        id=morning_second
        name= _ "Morning"
        image=misc/time-schedules/default/schedule-morning.png
        lawful_bonus=25
        red=5
        green=5
    [/time]
    [time]
        id=afternoon_second
        name= _ "Afternoon"
        image=misc/time-schedules/default/schedule-afternoon.png
        lawful_bonus=25
        red=5
        green=5
    [/time]
    [time]
        id=dusk
        name= _ "Dusk"
        image=misc/time-schedules/default/schedule-dusk.png
        green=-15
        blue=-15
        sound=ambient/night.ogg
        lawful_bonus=0
    [/time]
    [time]
        id=first_watch
        name= _ "First Watch"
        image=misc/time-schedules/default/schedule-firstwatch.png
        lawful_bonus=-25
        red=-35
        green=-35
        blue=-10
    [/time]
    [time]
        id=second_watch
        name= _ "Second Watch"
        image=misc/time-schedules/default/schedule-secondwatch.png
        lawful_bonus=-25
        red=-35
        green=-35
        blue=-10
    [/time]
#enddef
